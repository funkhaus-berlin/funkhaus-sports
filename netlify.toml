[functions]
  external_node_modules = ["react", "react/jsx-runtime", "react-dom/server", "google-auth-library", "googleapis", "jsonwebtoken", "firebase-admin"]
  included_files = ["netlify/functions/_shared/ticket.pug", "netlify/functions/_shared/assets/**", "netlify/functions/_shared/data/**"]

[build.environment]
  # Firebase configuration for serverless functions
  FIREBASE_PROJECT_ID = "funkhaus-sports"
  # Google Wallet configuration
  GOOGLE_WALLET_ISSUER_ID = "3388000000022209405"
  # Apple Wallet configuration
  APPLE_TEAM_ID = "ABDCEFGHIJ"
  APPLE_PASS_TYPE_ID = "pass.funkhaus.sports"

[[redirects]]
  from = "/api/email-tickets"
  to = "/.netlify/functions/email-tickets-background"
  status = 200
  force = true

[[redirects]]
  from = "/api/download-ticket"
  to = "/.netlify/functions/download-ticket"
  status = 200
  force = true


[[redirects]]
  from = "/api/invoice"
  to = "/.netlify/functions/invoice"
  status = 200
  force = true

[[redirects]]
  from = "/api/create-payment-intent"
  to = "/.netlify/functions/create-payment-intent"
  status = 200
  force = true

[[redirects]]
  from = "/api/stripe-webhook"
  to = "/.netlify/functions/stripe-webhook"
  status = 200
  force = true

[[redirects]]
  from = "/api/payment-status"
  to = "/.netlify/functions/payment-status"
  status = 200
  force = true


[[redirects]]
  from = "/api/generate-wallet-pass"
  to = "/.netlify/functions/generate-wallet-pass"
  status = 200
  force = true


[[redirects]]
  from = "/api/schedule-availability"
  to = "/.netlify/functions/schedule-availability"
  status = 200
  force = true

[[redirects]]
  from = "/api/resend-booking-email"
  to = "/.netlify/functions/resend-booking-email"
  status = 200
  force = true

[[redirects]]
  from = "/api/check-email-status"
  to = "/.netlify/functions/check-email-status"
  status = 200
  force = true

# Static asset exemptions - all assets in the public folder should be served directly
# First, ensure all public directories are properly served with their content
# This is the most important part - a special rule for any assets directly in the public folder
[[redirects]]
  from = "/:filename.:extension"
  to = "/:filename.:extension"
  status = 200
  conditions = {Path = {":extension" = ["png", "jpg", "jpeg", "gif", "svg", "webp", "ico", "pdf", "txt", "xml", "json", "webmanifest", "woff", "woff2", "ttf", "otf", "eot"]}}

# Special case for directories in the public folder
# Each directory needs its own rule to ensure all nested content is served correctly
[[redirects]]
  from = "/icons/*"
  to = "/icons/:splat"
  status = 200

[[redirects]]
  from = "/svg/*"
  to = "/svg/:splat"
  status = 200

[[redirects]]
  from = "/GT-Eesti/*"
  to = "/GT-Eesti/:splat"
  status = 200

[[redirects]]
  from = "/login/*"
  to = "/login/:splat"
  status = 200

[[redirects]]
  from = "/reset-password/*"
  to = "/reset-password/:splat"
  status = 200

[[redirects]]
  from = "/signin/*"
  to = "/signin/:splat"
  status = 200

# Catch any new directories automatically
[[redirects]]
  from = "/:directory/*"
  to = "/:directory/:splat"
  status = 200
  conditions = {Directory = {":directory" = true}}

# Catch-all redirect for SPA routes
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Headers for caching strategies
[[headers]]
  # HTML files (short caching)
  for = "*.html"
  [headers.values]
  Cache-Control = "public, max-age=0, must-revalidate"

[[headers]]
  # CSS and JavaScript (long caching)
  for = "*.css"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, POST, OPTIONS"
    Access-Control-Allow-Headers = "X-Requested-With, Content-Type, Authorization"


[[headers]]
  for = "*.mjs"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"

# Images (long caching)
[[headers]]
  for = "*.png"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.jpg"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.jpeg"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.gif"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.svg"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.ico"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"

# Fonts (long caching)
[[headers]]
  for = "*.woff"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"
  Access-Control-Allow-Origin = "*"
    Content-Security-Policy-Report-Only = "default-src 'self'; font-src 'self' https://ticket.funkhaus-berlin.net/;"
  Content-Type = "application/font-woff"
  Server = "YourServerName"
  Strict-Transport-Security = "max-age=31536000; includeSubDomains"
  Vary = "Origin"
  X-Content-Type-Options = "nosniff"
  X-Frame-Options = "DENY"
  X-XSS-Protection = "1; mode=block"


[[headers]]
  for = "*.woff2"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"
  Access-Control-Allow-Origin = "*" 


[[headers]]
  for = "*.ttf"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.otf"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.eot"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"

# Videos and Audios (long caching)
[[headers]]
  for = "*.mp4"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.mp3"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.wav"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.webm"
  [headers.values]
  Cache-Control = "public, max-age=31536000, immutable"

# Other static files (moderate caching)
[[headers]]
  for = "*.*"
  [headers.values]
  Cache-Control = "public, max-age=86400" # 24 hours

# Note: This configuration aims to cover a wide range of file types. Depending on your specific needs, you might want to adjust the caching duration or add more file types.
